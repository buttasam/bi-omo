<?xml version="1.0" encoding="UTF-8"?>
<!-- pokud jako ucitel mate server users.fit.cvut.cz, pouzijte nize uvedeny odkaz -->
<!-- <?xml-stylesheet type="text/xsl" href="https://users.fit.cvut.cz/~ryantiva/bi-omo/sprojekt/sprojekt_html.xsl"?> -->
<!-- pokud jste student a mate server webdev.fit.cvut.cz, odkomentujte nasledujici radek a zakomentujte ten predchozi -->
<!--<?xml-stylesheet type="text/xsl" href="https://webdev.fit.cvut.cz/~rybolzde/bi-omo/sprojekt/sprojekt_html.xsl"?>-->
<!-- pokud odevzdavate semestralku pres progtest, pouzijte nize uvedeny odkaz -->
<?xml-stylesheet type="text/xsl" href="sprojekt_html.xsl"?>
<!--<!DOCTYPE sproject PUBLIC "-//XMLmind//DTD Sprojekt//EN" "https://webdev.fit.cvut.cz/~rybolzde/bi-omo/sprojekt/sprojekt.dtd">-->
<!--<!DOCTYPE sproject PUBLIC "-//XMLmind//DTD Sprojekt//EN" "sprojekt.dtd">-->
<sproject>
	<course>
		<cname>Objektové modelování</cname>

		<code>BI-OMO</code>

		<semester>Zimní semestr 2015/2016</semester>

		<seminar>Pondělí 14:30</seminar>
	</course>

	<author1>
		<aname>Petr Hanzl</aname>

		<uname>hanzlpe2</uname>

		<email>hanzlpe@2fit.cvut.cz</email>
	</author1>
	<author2>
		<aname>Samuel Butta</aname>

		<uname>buttasam</uname>

		<email>buttasam@fit.cvut.cz</email>
	</author2>

	<content>
		<declaration>Prohlašujeme, že jsme svou semestrální práci vypracovali
			samostatně. Všechny zdroje, ze kterých jsme čerpali, jsou uvedeny v části
			Odkazy.</declaration>

			<title>Minigolf booking system</title>

			<problem_statement>
				<para>Minigolfová spolčenost, která vlastní více hřišť v různých městech plánuje sjednotit rezervační systém. Do této doby byl jediný způsob rezervace možný po telefonu
					nebo e-mailu, což znemožnovalo synchronizaci.
				</para>
				<para>Zadavatel si od systému slibuje větší pohodlý pro klienty a ulehčení administrační zátěže zaměstnancům.</para>
				<para>Systém má být navržený tak, aby nad ním bylo možné stavět další vrstvy například webovou aplikaci.</para>

				<comment>
					<para>UKÁZKOVÁ SEMESTRÁLKA SLOUŽÍ PRO OSVĚTLENÍ VÝZNAMU A OČEKÁVANÉHO OBSAHU JEDNOTLIVÝCH ČÁSTÍ.
						NEKLADE SI ZA CÍL BÝT ÚPLNÁ ANI PŘEDSTAVOVAT ETALON MAXIMÁLNÍHO POČTU BODŮ.</para>
					</comment>


					<comment>
						<para>Tohle je komentář k 1. odstavci popisu semestrální práce.</para>

						<para>Prvotní popis problému (problem statement) je první pokus o vymezení problému, který
							jsme získali od zadavatele. Vyjadřuje, co komu vadí nebo chybí. Musí z něj být zřejmé, že 
							zadavatel pociťuje současný stav jako problém a že si dovede představit stav lepší, 
							o který má zájem. Necítí-li zadavatel problém nebo nemá-li zájem o řešení problému, 
							nemáme co řešit.</para>
						</comment>
					</problem_statement>

					<problem_domain>
						<para>Zaměstnanec bude moci v administračním rozhraní rezervaci přidat, odebrat nebo editovat.</para>

						<para>Hráč si se může ve skupině jiných hráčů zůčastnit hry. U hráče je nutné rozlišit, zda se jedná o amatéra nebo profesionála. Zamětnanec a hráč mají některé společné vlastnoti, kterými jsou jméno a věk.
						 </para>

						<para>Klíčovým bodem celé aplikace je rezervace. Rezervace je možná na jméno, datum a čas a vztahuje se na konkrétní hřište. Jednotlivá hřiště nabízí speciální služby v podobě jídla a pití. Jídlo je charakteristické váhou a pití objemem.
						 </para>
						<comment>
							<para>Tohle je komentář k 2. odstavci popisu semestrální práce.</para>

							<para>Popis problémové domény má vylíčit, jak vypadá prostředí, kde
								máme řešit problém - kdo (nebo co v případě čidel a různých automatických zařízení) bude
								interagovat s požadovaným systémem, k čemu která interakce slouží (jaké role má hrát 
								požadovaný systém v prostředí), kdo komu sděluje jaké informace (zejména jaké informace
								bude dostávat požadovaný systém a jaké informace musí poskytovat svým uživatelům). Snažíme se zachytit
								klíčové procesy a činnosti, které v prostředí probíhají.
								V popisu problémové domény se snažíme popsat realitu - jaké objekty se tu vyskytují, jaké mají
								vlastnosti a vztahy mezi sebou. Pokud je nutné dodržovat nějaká pravidla, tak je vysvětlete také zde.</para>

								<para>Popis problémové domény je hlavním zdrojem informací pro následné vytvoření strukturálního konceptuálního modelu OntoUML.</para>
							</comment>
						</problem_domain>

						<purpose>  
							<para>Společnost potřebuje sjednotit informační systém pro zaznamenávání jednotlivých her a přidat k němu funkcionality rezervačního systému.</para>

							<comment>
								<para>Cílem účelu je jasně definovat, jaký je hlavní cíl aplikace, co je jejím hlavním účelem a přínosem.</para>
							</comment>
						</purpose>

						<functions>
							<function>
								Zaměstnanec může přidat, odebrat a editovat rezervaci.
							</function>
							<function>
								Systém umožňuje evidovat zaměstance a místa kde pracují.
							</function>
							<function>
								Systém dokáže spočítat nejvyšší dosažené skóre pro konkrétního hráče.
							</function>
							<function>
								Systém vypočítá celkový počet rezervací.
							</function>
							<function>
								Systém vypočítá celkový počet návštěv za určitě období.
							</function>
							<comment>
								<para>Klíčové funkce určují, co má systém dělat, aby naplnil svůj účel. Výčet funkcí je podrobné zadání úlohy, které vznikne rozborem problému,
									prostředí a účelu. Jedná se vlastně o výčet funkčních požadavků na systém. Z těchto klíčových funkcí vychází mimo jiné dotazy, kterými ověříme, že
									systém plní svou funkci.</para>
								</comment>
							</functions>

							<rules>
								<rule>Zaměstnanci musí být alespoň 18 let.</rule>
								<rule>Každý zaměstanec pracuje právě na jednom hřišti.</rule>
								<rule>Každý hráč je buď amatér nebo profesionál.</rule>
								<comment>
									<para>Pravidla a omezení určují, jaké podmínky mají být v systému průběžně splněné, aby mohl správně  fungovat. 
										Splnění pravidel se má kontrolovat vždy, když na splnění pravidel záleží (např. před vykonáním funkce, která splnění pravidla předpokládá,
										jinak může vést např. k nesprávným výsledkům).</para>
										<para>V rámci semestrální práce je povinné definovat alespoň 3 pravidla. Musí se jednat o netriviální pravidla, kde je nutné uplatnit
											složitější navigaci nebo logiku. Pravidla musí mít smysl vůči účelu systému.</para>
											<para>Mezi pravidla se nepočítají omezení daná modelem - tedy násobnosti vazeb, apod. I ta ale samozřejmě musí být splněna, aby aplikace
												fungovala správně podle požadavků.</para>
											</comment>
										</rules>

										<queries>
											<query>
												Zamestnanec Petr Novák přidá novou rezervaci pro skupinu 3 hráčů, kteří požadují kuřecí stake.
											</query>
											<query>
												Najdi všechny hráče, kteří se účastnili alespoň 2 her.
											</query>
											<query>
												Najdi rezervaci, která je pro nejvíc hráčů a zároveň má objem piva vyšší než 50 litrů. 
											</query>	
											<query>
												Najdi hráče s nejvyšším skóre. 
											</query>
											<query>
												Najdi nejstaršího zaměstnance. 
											</query>	
											<comment>
												<para>Dotazy slouží k demonstraci správné funkčnosti klíčových funkcí systému. Pomocí těchto dotazů ukážeme,
													že náš systém umí splnit všechny požadavky, které na něj byly kladeny. Musí tedy vycházet z klíčových funkcí a účelu systému.</para>
													<para>V rámci semestrální práce je povinné definovat alespoň 3 takové dotazy. Dotazy musí být netriviální a musí vyžadovat složitejší navigaci nebo logiku.</para>
												</comment>
											</queries>

											<description>
												<comment>
													<para>S T R U K T U R A    S E M E S T R Á L N Í    P R Á C E  
														Semestrálka má tyto části: 
														- hlavička (údaje o vás a o čase cvičení, prohlášení o autorství, název práce)
														- prvotní popis problému
														- popis problémové domény
														- účel požadovaného systému (stručně, pokud možno jednou větou)
														- seznam funkcí klíčových k naplnění účelu
														- seznam pravidel a omezení, která musí být splněna pro správnou funkci systému a pro splnění jeho účelu
														- seznam dotazů, které demonstrují správnou funkčnost systému a schopnost splnit jeho účel
														- rozbor zadání (nepovinný): detailnější rozbor problému a problémové domény, stanovení klíčových pojmů a definice jejich významů,
														určení synonym, apod., určení způsobu, jakým se autor rozhodl řešit jaké problémy
														- strukturální konceptuální model OntoUML
														- diagram konceptuálního modelu OntoUML
														- diskuze ke konceptuálnímu modelu
														- tabulka použití konceptů OntoUML v modelu
														- strukturální implementační model UML
														- diagram objektového implementačního modelu
														- diskuse k implementačnímu modelu
														- implementace
														- odkaz na Smalltalk package s implementací prototypu systému
														- diskuze k implementaci
														- tabulka použití implementačních objektových technik
														- verifikace splnění zadání
														- odkaz na Smalltalk package s automatickými testy
														- tabulka popisující automatické testy
														- závěrečná diskuse
														- odkazy na použité zdroje
														- ke xml-dokumentu přiložte dva zdrojové soubory:
														- zdroják ST package semestrálky. Package pojmenujte login-nazev_semestralky a stejně i soubor.
														- zdroják ST package testů semestrálky. Package pojmenujte login-nazev-tests a stejně i soubor. Testy musí pokrývat
														- funkčnost složitějších metod
														- dotazy
														- pravidla
														- testovány musí být pozitivní i negativní scénáře (kdy má test selhat), příp. test musí být koncipován na úplnou shodu (viz např. testQueryStudentStudies)
														- všechny testy musí být "zelené"!


														Všechny části semestrální práce jsou povinné kromě těch,
														které jsou výslovně označeny jako nepovinné.</para>
													</comment>

													<comment>
														<para>T E C H N O L O G I E         A        N Á S T R O J E   

															Semestrální práci odevzdáte ve formě XML dokumentu. Podrobnosti o způsobu odevzdání semestrálky najdete na eduxu.

															STRUKTURA DOKUMENTU:
															Odevzdaný xml dokument nechť:
															1. pro zobrazení v html používá XSLT šablonu sprojekt_html.xsl (viz url výše)
															2. pro formátování html použije kaskádní styl sprojekt_html.css (viz url výše)
															3. hlavní dokument nazvěte main.xml

															TVORBA DOKUMENTU (semestrálky)
															- Pro editaci práce tedy lze použít libovolný XML editor (například ve vývojovém prostředí NetBeans) nebo
															libovolný textový editor (ať už umí nebo neumí pracovat s XML)  (PSPad, Kwrite, Notepad, ...)
															- nejjednodušší metodou je zkopírovat vzorový soubor main.xml do vašeho cílového adresáře,
															zachovat strukturu a odkazy na xslt a pouze nahradit obsah

														</para>
														<para>
															Termíny zadání, průběžných prezentací (kontrolních bodů) jsou uvedeny na eduxu. Tyto termíny je potřeba
															dodržet. Na eduxu najdete také pravidla, podle kterých budou semestrálky hodnoceny.
														</para>
														<para>
															Motivace pro použití této technologie:
															1. Jasná specifikace, co má obsahovat vaše semestrálka.
															2. Krásný ;-) jednotný design pro vás naprosto bez práce.

															Máte-li nějaké speciální důvody k tomu, že nemůžete semestrálku odevzdat formou XML, 
															řešte to individuálně se svými cvičícími.</para>
														</comment>
													</description>

													<conceptual_model>
														<cm_picture>
															<mediaobject>
																<imageobject>
																	<imagedata fileref="minigolf.png" />
																</imageobject>
															</mediaobject>
														</cm_picture>

														<comment>
															<para>Požadavky na návrh konceptuálního modelu tříd:</para>

															<para>Jedná se o konceptuální model - v pojmech problémové domény. Do modelu nekreslete, 
																jakým způsobem chcete implementovat asociace mezi objekty, ani směry navigace. Do 
																tříd vyplňte seznam atributů a metod (v ukázce jsou tyto nekompletní!). U asociací
																uvádějte násobnosti a názvy. Vše v návrhu musí k něčemu konkrétnímu sloužit, každý údaj
																musí být použit v některém dotazu nebo pravidle, vše musíte umět pragmaticky zdůvodnit.
																Jinými slovy, model má obsahovat pouze to, co je třeba ke splnění účelu.</para>

																<para>V modelu využijte koncepty OntoUML dle své volby. Za správné použití každého konceptu
																	získáte patřičný počet bodů.</para>

																	<para>Konceptuální model vytvářejte v anglickém jazyce, následnou diskuzi můžete provést v českém jazyce.
																		Cílem diskuze je vysvětlit význam složitejších konstrukcí a vazeb, aby čtenář model správně pochopil.</para>
																	</comment>

																	<cm_discussion>
																		<para>
	
Zaměstanec i hráč mají společené vlastnosti, bylo vhodné vytvořit Kind Person, z kterého obě třídy Employee i Player dědí z třídy Person.								</para>
																		<para>
Dále jsme použili typ Kind pro třídu Game. Hru hraje více lidí, tedy logickým krokem bylo zvolení typu Collective na třídu Group. Skupina se skládá z jednotlivých hrčů. Jelikož u hráče potřebujeme výlučný vztah, zda se jedná o amatéra nebo profesionála. Použili jsme tedy Phase, která je disjoint, complete.										</para>
																		<para>
Rezervace je modelovaná jako Kind. Rezervaci musí být nutně přiřazena hra. Rezervace obsahuje nepovinně právě Služby.																	</para>

<para>
Třída Food a Drink dědí z Kategorie Service. U tříd Food a Drink je použit typ quantity, který charakterizuje specifickou vlastnost, tedy váhu a objem.
</para>
																	
																</cm_discussion>

																		<cm_concepts>
																		<cm_concept>
																			<name>Kind</name>
																			<usages>
																				<usage>
																					<class>Playground, Person, Reservation, Game</class>
																					<relation>Playground - Reservation</relation>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Subkind</name>
																			<usages>
																				<usage>
																					<class>Food, Drink</class>
																					<relation>Food - Service - Drink</relation>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Role</name>
																			<usages>
																				<usage>
																					<class>Employee, Player</class>
																					<relation>Person </relation>
																					<comment>Role dědí ze třídy Person</comment>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Phase</name>
																			<usages>
																				<usage>
																					<class>Amateur, Professional</class>
																					<relation>Player</relation>
																					<comment>Hráč je amatér nebo profesionál</comment>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Category</name>
																			<usages>
																				<usage>
																					<class>Service</class>
																					<relation>Drink, Food, Reservation</relation>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>RoleMixin</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Mixin</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Whole</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Part</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Quantity</name>
																			<usages>
																				<usage>
																					<class>Volume, Weight</class>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Collective</name>
																			<usages>
																				<usage>
																					<class>Group</class>
																				</usage>
																			</usages>
																		</cm_concept>
																		<cm_concept>
																			<name>Quality</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Mode</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Relator</name>
																		</cm_concept>
																		<cm_concept>
																			<name>Formal</name>
																		</cm_concept>

																		<comment>
																			<para>V tabulce konceptuálních konceptů zaznamenejte, jaké koncepty OntoUML modelu jste ve své semestrální práci použili a kde.
																				Vyjmenujte pouze ty zástupce, kteří se podílejí na bodovém hodnocení. Za každý správně použitý koncept
																				získáte body do hodnocení konceptuální části semestrální práce. Ohodnocení jednotlivých konceptů najdete na eduxu.</para>
																			</comment>
																		</cm_concepts>

																	</conceptual_model>

								

																		
																					</content>
																				</sproject>
